---
# stateful set for the mysql database version 8.0
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.database_name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.database_name }}
  serviceName: "db"
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.database_name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.database_node }}
      containers:
      - name: {{ .Values.database_name }}
        image: mysql:8.0
        ports:
        - containerPort: {{ .Values.database_port }}
          name: db-port
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_root_pass
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_user_pass
        - name: EXPORTER_USER
          valueFrom:
              secretKeyRef:
                name: {{ .Values.database_secret_name }}
                key: exporter_user
        - name: EXPORTER_PASS
          valueFrom:
              secretKeyRef:
                name: {{ .Values.database_secret_name }}
                key: exporter_pass
        volumeMounts:
        - name: {{ .Values.database_name }}
          mountPath: "/var/lib/mysql"
        - name: mysql-config
          mountPath: "/etc/mysql/conf.d"
        - name: exporter-creds-script
          mountPath: "/docker-entrypoint-initdb.d"
      - name: mysql-exporter
        image: prom/mysqld-exporter
        args:
        - --config.my-cnf=/etc/mysql/my.cnf
        ports:
        - name: db-metrics
          containerPort: 9104
        volumeMounts:
        - name: exporter-config
          mountPath: /etc/mysql
      volumes:
      - name: {{ .Values.database_name }}
        persistentVolumeClaim:
          claimName: db-pv-claim
      - name: mysql-config
        configMap:
          name: mysql-config
      - name: exporter-config
        configMap:
          name: exporter-config
      - name: exporter-creds-script
        configMap:
          name: exporter-creds-script
      
---
# service to expose the db within the cluster
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.database_name }}
  ports:
  - port: {{ .Values.database_port }}
    targetPort: {{ .Values.database_port }}
    name: db-port

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-pv
  namespace: {{ .Values.namespace }}
spec:
  storageClassName: ""
  capacity:
    storage: 2Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: {{ .Values.volume_path }}
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pv-claim
  namespace: {{ .Values.namespace }}
spec:
  storageClassName: ""
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
# one liner to use native pass in mysql
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: {{ .Values.namespace }}
data:
  my.cnf: |
    [mysqld]
    default-authentication-plugin=mysql_native_password

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: exporter-config
  namespace: {{ .Values.namespace }}
data:
  my.cnf: |
    [client]
    user=exporter
    password=exporter-pass
    port=3306
    host=db-service

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: exporter-creds-script
  namespace: {{ .Values.namespace }}
data:
  creds.sh: |
    #!/bin/bash
    mysql -u root -p$MYSQL_ROOT_PASSWORD -e "CREATE USER IF NOT EXISTS '$EXPORTER_USER'@'%' IDENTIFIED BY '$EXPORTER_PASS' WITH MAX_USER_CONNECTIONS 3;"
    mysql -u root -p$MYSQL_ROOT_PASSWORD -e "GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO '$EXPORTER_USER'@'%';"
    mysql -u root -p$MYSQL_ROOT_PASSWORD -e "FLUSH PRIVILEGES;"