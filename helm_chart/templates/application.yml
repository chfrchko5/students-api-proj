---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app_deployment_name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Values.app_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app_name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.app_node }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.app_image.repo }}:{{ .Values.app_image.tag }}"
        ports:
        - containerPort: {{ .Values.app_port }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Waiting for database...";
            until nc -z db-service 3306; do
              echo "Database not ready, sleeping...";
              sleep 5;
            done;
            python run.py
        env:
        - name: DB_HOST
          value: db-service
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_user_pass
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_database
        - name: DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_uri
---
apiVersion: v1
kind: Service
metadata:
  name: api-app-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.app_name }}
  type: NodePort
  ports:
  - protocol: TCP
    port: {{ .Values.app_port }}
    targetPort: {{ .Values.app_port }}
    nodePort: 31111

---
apiVersion: batch/v1
kind: Job
metadata:
  name: flask-migrate
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Values.namespace }}
    meta.helm.sh/release-namespace: default
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: flask-migrate
        image: "{{ .Values.app_image.repo }}:{{ .Values.app_image.tag }}"
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Waiting for database...";
            until nc -z db-service 3306; do
              echo "Database not ready, sleeping...";
              sleep 5;
            done;
            echo "Database is up! Running migrations...";
            flask db upgrade
            flask db migrate
        env:
        - name: DB_HOST
          value: db-service
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_user_pass
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_database
        - name: DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database_secret_name }}
              key: db_uri